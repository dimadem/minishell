.TH "/Users/dimadem/Documents/GitHub/minishell/src/parser/tokeniser_helpers.c" 3 "Version 1" "maxishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/dimadem/Documents/GitHub/minishell/src/parser/tokeniser_helpers.c
.SH SYNOPSIS
.br
.PP
\fR#include 'tokens\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBt_token\fP * \fBnew_token\fP (char *value, \fBt_token_type\fP type)"
.br
.ti -1c
.RI "void \fBappend_token\fP (\fBt_token\fP **tokens, \fBt_token\fP *\fBnew_token\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void append_token (\fBt_token\fP ** tokens, \fBt_token\fP * new_token)"

.PP
Definition at line \fB33\fP of file \fBtokeniser_helpers\&.c\fP\&.
.nf
34 {
35     t_token *prev;
36 
37     if (!*tokens)
38         *tokens = new_token;
39     else
40     {
41         prev = *tokens;
42         while (prev\->next)
43             prev = prev\->next;
44         prev\->next = new_token;
45     }
46 }
.PP
.fi

.PP
References \fBnew_token()\fP, and \fBs_token::next\fP\&.
.PP
Referenced by \fBappend_phrase_if_valid()\fP, and \fBhandle_special_chars()\fP\&.
.SS "\fBt_token\fP * new_token (char * value, \fBt_token_type\fP type)"

.PP
Definition at line \fB15\fP of file \fBtokeniser_helpers\&.c\fP\&.
.nf
16 {
17     t_token *token;
18 
19     token = malloc(sizeof(t_token));
20     if (!token)
21         return (NULL);
22     token\->data = ft_strdup(value);
23     if (!token\->data)
24     {
25         free(token);
26         return (NULL);
27     }
28     token\->type = type;
29     token\->next = NULL;
30     return (token);
31 }
.PP
.fi

.PP
References \fBs_token::data\fP, \fBft_strdup()\fP, \fBs_token::next\fP, and \fBs_token::type\fP\&.
.PP
Referenced by \fBappend_phrase_if_valid()\fP, \fBappend_token()\fP, and \fBhandle_special_chars()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for maxishell from the source code\&.
