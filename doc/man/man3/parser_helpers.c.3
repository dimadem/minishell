.TH "/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" 3 "Version 1" "maxishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c
.SH SYNOPSIS
.br
.PP
\fR#include 'tokens\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBt_ast\fP * \fBnew_ast_node\fP (\fBt_token_type\fP type)"
.br
.ti -1c
.RI "\fBt_ast\fP * \fBcreate_redir\fP (\fBt_token\fP **tokens, \fBt_token\fP *tmp)"
.br
.ti -1c
.RI "int \fBarg_len\fP (\fBt_token\fP *current)"
.br
.ti -1c
.RI "void \fBset_command_args\fP (\fBt_ast\fP *command_node, \fBt_token\fP **tokens, int arg_count)"
.br
.ti -1c
.RI "\fBt_ast\fP * \fBmanage_commands\fP (\fBt_token\fP **tokens)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int arg_len (\fBt_token\fP * current)"

.PP
Definition at line \fB48\fP of file \fBparser_helpers\&.c\fP\&.
.nf
49 {
50     int arg_count;
51 
52     arg_count = 0;
53     while (current && current\->type == PHRASE)
54     {
55         arg_count++;
56         current = current\->next;
57     }
58     return (arg_count);
59 }
.PP
.fi

.PP
References \fBs_token::next\fP, \fBPHRASE\fP, and \fBs_token::type\fP\&.
.PP
Referenced by \fBmanage_commands()\fP\&.
.SS "\fBt_ast\fP * create_redir (\fBt_token\fP ** tokens, \fBt_token\fP * tmp)"

.PP
Definition at line \fB35\fP of file \fBparser_helpers\&.c\fP\&.
.nf
36 {
37     t_ast   *redirect_node;
38 
39     redirect_node = new_ast_node((*tokens)\->type);
40     *tokens = (*tokens)\->next\->next;
41     redirect_node\->left = manage_redirs(tokens);
42     redirect_node\->right = create_redir_node(tmp\->next);
43     free(tmp\->data);
44     free(tmp);
45     return (redirect_node);
46 }
.PP
.fi

.PP
References \fBcreate_redir_node()\fP, \fBs_token::data\fP, \fBs_ast::left\fP, \fBmanage_redirs()\fP, \fBnew_ast_node()\fP, \fBs_token::next\fP, and \fBs_ast::right\fP\&.
.PP
Referenced by \fBmanage_redirs()\fP\&.
.SS "\fBt_ast\fP * manage_commands (\fBt_token\fP ** tokens)"

.PP
Definition at line \fB80\fP of file \fBparser_helpers\&.c\fP\&.
.nf
81 {
82     t_ast       *command_node;
83     int         arg_count;
84 
85     command_node = new_ast_node(PHRASE);
86     arg_count = arg_len(*tokens);
87     command_node\->args = malloc(sizeof(char *) * (arg_count + 1));
88     if (!command_node\->args)
89         return (NULL);
90     set_command_args(command_node, tokens, arg_count);
91     return (command_node);
92 }
.PP
.fi

.PP
References \fBarg_len()\fP, \fBs_ast::args\fP, \fBnew_ast_node()\fP, \fBPHRASE\fP, and \fBset_command_args()\fP\&.
.PP
Referenced by \fBmanage_redirs()\fP\&.
.SS "\fBt_ast\fP * new_ast_node (\fBt_token_type\fP type)"

.PP
Definition at line \fB21\fP of file \fBparser_helpers\&.c\fP\&.
.nf
22 {
23     t_ast       *node;
24 
25     node = malloc(sizeof(t_ast));
26     if (!node)
27         return (NULL);
28     node\->type = type;
29     node\->args = NULL;
30     node\->left = NULL;
31     node\->right = NULL;
32     return (node);
33 }
.PP
.fi

.PP
References \fBs_ast::args\fP, \fBs_ast::left\fP, \fBs_ast::right\fP, and \fBs_ast::type\fP\&.
.PP
Referenced by \fBcreate_redir()\fP, \fBmanage_commands()\fP, \fBmanage_pipe()\fP, and \fBmanage_redirs()\fP\&.
.SS "void set_command_args (\fBt_ast\fP * command_node, \fBt_token\fP ** tokens, int arg_count)"

.PP
Definition at line \fB61\fP of file \fBparser_helpers\&.c\fP\&.
.nf
63 {
64     int     i;
65     t_token *tmp;
66 
67     i = 0;
68     while (i < arg_count)
69     {
70         command_node\->args[i] = ft_strdup((*tokens)\->data);
71         tmp = *tokens;
72         *tokens = (*tokens)\->next;
73         free(tmp\->data);
74         free(tmp);
75         i++;
76     }
77     command_node\->args[arg_count] = NULL;
78 }
.PP
.fi

.PP
References \fBs_ast::args\fP, \fBs_token::data\fP, \fBft_strdup()\fP, and \fBs_token::next\fP\&.
.PP
Referenced by \fBmanage_commands()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for maxishell from the source code\&.
