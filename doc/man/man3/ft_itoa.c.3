.TH "/Users/dimadem/Documents/GitHub/minishell/lib/libft/src/ft_itoa.c" 3 "Version 1" "maxishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/dimadem/Documents/GitHub/minishell/lib/libft/src/ft_itoa.c
.SH SYNOPSIS
.br
.PP
\fR#include 'libft\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static int \fBcount_digits\fP (int n)"
.br
.ti -1c
.RI "char * \fBft_itoa\fP (int n)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static int count_digits (int n)\fR [static]\fP"

.PP
Definition at line \fB23\fP of file \fBft_itoa\&.c\fP\&.
.nf
24 {
25     int count;
26 
27     count = 0;
28     if (n <= 0)
29         count = 1;
30     else
31         count = 0;
32     while (n != 0)
33     {
34         count++;
35         n /= 10;
36     }
37     return (count);
38 }
.PP
.fi

.PP
Referenced by \fBft_itoa()\fP\&.
.SS "char * ft_itoa (int n)"

.PP
Definition at line \fB40\fP of file \fBft_itoa\&.c\fP\&.
.nf
41 {
42     int     len;
43     char    *str;
44 
45     if (n == INT_MIN)
46         return (ft_strdup("\-2147483648"));
47     if (n == 0)
48         return (ft_strdup("0"));
49     len = count_digits(n);
50     str = (char *)malloc(len + 1);
51     if (!str)
52         return (NULL);
53     str[len\-\-] = '\\0';
54     if (n < 0)
55     {
56         str[0] = '\-';
57         n = \-n;
58     }
59     while (n)
60     {
61         str[len\-\-] = n % 10 + '0';
62         n /= 10;
63     }
64     return (str);
65 }
.PP
.fi

.PP
References \fBcount_digits()\fP, and \fBft_strdup()\fP\&.
.PP
Referenced by \fBft_print_int()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for maxishell from the source code\&.
