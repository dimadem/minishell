.TH "/Users/dimadem/Documents/GitHub/minishell/lib/libft/src/ft_printf.c" 3 "Version 1" "maxishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/dimadem/Documents/GitHub/minishell/lib/libft/src/ft_printf.c
.SH SYNOPSIS
.br
.PP
\fR#include 'libft\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBft_formatssssss\fP (va_list args, const char format)"
.br
.ti -1c
.RI "int \fBft_printf\fP (const char *str,\&.\&.\&.)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int ft_formatssssss (va_list args, const char format)"

.PP
Definition at line \fB15\fP of file \fBft_printf\&.c\fP\&.
.nf
16 {
17     int len;
18 
19     len = 0;
20     if (format == 'c')
21         len += ft_print_char(va_arg(args, int));
22     else if (format == 's')
23         len += ft_print_str(va_arg(args, char *));
24     else if (format == 'p')
25         len += ft_print_ptr(va_arg(args, unsigned long long));
26     else if (format == 'd' || format == 'i')
27         len += ft_print_int(va_arg(args, int));
28     else if (format == 'u')
29         len += ft_print_unsigned_dec(va_arg(args, unsigned int));
30     else if (format == 'x' || format == 'X')
31         len += ft_print_unsigned_hex(va_arg(args, unsigned int), format);
32     else if (format == '%')
33         len += ft_print_percent();
34     return (len);
35 }
.PP
.fi

.PP
References \fBft_print_char()\fP, \fBft_print_int()\fP, \fBft_print_percent()\fP, \fBft_print_ptr()\fP, \fBft_print_str()\fP, \fBft_print_unsigned_dec()\fP, and \fBft_print_unsigned_hex()\fP\&.
.PP
Referenced by \fBft_printf()\fP\&.
.SS "int ft_printf (const char * str,  \&.\&.\&.)"

.PP
Definition at line \fB37\fP of file \fBft_printf\&.c\fP\&.
.nf
38 {
39     int     i;
40     va_list args;
41     int     len;
42 
43     i = 0;
44     len = 0;
45     va_start(args, str);
46     while (str[i])
47     {
48         if (str[i] == '%')
49         {
50             len += ft_formatssssss(args, str[i + 1]);
51             i++;
52         }
53         else
54             len += ft_print_char(str[i]);
55         i++;
56     }
57     va_end(args);
58     return (len);
59 }
.PP
.fi

.PP
References \fBft_formatssssss()\fP, and \fBft_print_char()\fP\&.
.PP
Referenced by \fBappend_phrase_if_valid()\fP, \fBinput_error_checks()\fP, \fBprint_maxishell()\fP, and \fBprint_stack()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for maxishell from the source code\&.
