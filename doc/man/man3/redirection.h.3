.TH "/Users/dimadem/Documents/GitHub/minishell/inc/redirection.h" 3 "Version 1" "maxishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/dimadem/Documents/GitHub/minishell/inc/redirection.h
.SH SYNOPSIS
.br
.PP
\fR#include 'shell\&.h'\fP
.br
\fR#include 'tokens\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBredirect_in\fP (\fBt_ast\fP *node, \fBt_minishell_data\fP *data)"
.br
.RI "redirection input in context of executing AST "
.ti -1c
.RI "int \fBredirect_out\fP (\fBt_ast\fP *node, \fBt_minishell_data\fP *data)"
.br
.RI "redirect out in the context of executing AST "
.ti -1c
.RI "int \fBopen_file\fP (\fBt_ast\fP *node, char *direction)"
.br
.RI "open file in the context of redirection "
.in -1c
.SH "Function Documentation"
.PP 
.SS "int open_file (\fBt_ast\fP * node, char * direction)"

.PP
open file in the context of redirection -- '<' - read
.IP "\(bu" 2
'>' - write
.IP "\(bu" 2
'>>' - append
.IP "\(bu" 2
'tty' - open /dev/tty
.IP "\(bu" 2
'<<' - here document
.IP "\(bu" 2

.IP "\(bu" 2
\fBParameters\fP
.RS 4
\fInode\fP current node in the AST
.RE
.PP

.IP "\(bu" 2
\fBParameters\fP
.RS 4
\fIdirection\fP type of redirection
.RE
.PP

.IP "\(bu" 2
\fBReturns\fP
.RS 4
int file descriptor 
.RE
.PP

.PP

.PP
Definition at line \fB23\fP of file \fButils\&.c\fP\&.
.nf
24 {
25     int fd;
26     
27     if (ft_strcmp(direction, ">") == 0)
28         fd = open(node\->args[0], O_WRONLY | O_CREAT | O_TRUNC, 0644);
29     else if (ft_strcmp(direction, ">>") == 0)
30         fd = open(node\->args[0], O_WRONLY | O_CREAT | O_APPEND, 0644);
31     else if (ft_strcmp(direction, "<") == 0)
32         fd = open(node\->args[0], O_RDONLY);
33     else if (ft_strcmp(direction, "tty") == 0)
34         fd = open("/dev/tty", O_RDWR);
35     else
36         fd = \-1;
37     return (fd);
38 }
.PP
.fi

.PP
References \fBs_ast::args\fP, and \fBft_strcmp()\fP\&.
.PP
Referenced by \fBexecute_redirect()\fP, and \fBredirect_in()\fP\&.
.SS "int redirect_in (\fBt_ast\fP * node, \fBt_minishell_data\fP * data)"

.PP
redirection input in context of executing AST --
.IP "\(bu" 2
\fBParameters\fP
.RS 4
\fInode\fP current node in the AST
.RE
.PP

.IP "\(bu" 2
\fBParameters\fP
.RS 4
\fIdata\fP minishell structure data
.RE
.PP

.IP "\(bu" 2
\fBReturns\fP
.RS 4
int return status:
.RE
.PP

.IP "\(bu" 2
- 0: success
.IP "\(bu" 2
- 1: error 
.PP

.PP
Definition at line \fB23\fP of file \fBredirect_in\&.c\fP\&.
.nf
24 {
25     pid_t   pid;
26 
27     pid = fork();
28     if (pid == \-1)
29         return (1);
30     if (pid == 0)
31     {
32         data\->temp_fd = open_file(node\->right, "<");
33         if (data\->temp_fd == \-1)
34             return (1);
35         execute_ast(node\->left, data);
36         exit(0);
37     }
38     waitpid(pid, &data\->exit_status, 0);
39     return (0);
40 }
.PP
.fi

.PP
References \fBexecute_ast()\fP, \fBs_minishell_data::exit_status\fP, \fBs_ast::left\fP, \fBopen_file()\fP, \fBs_ast::right\fP, and \fBs_minishell_data::temp_fd\fP\&.
.PP
Referenced by \fBexecute_ast()\fP\&.
.SS "int redirect_out (\fBt_ast\fP * node, \fBt_minishell_data\fP * data)"

.PP
redirect out in the context of executing AST -- looking similar to the pipe function
.IP "\(bu" 2

.IP "\(bu" 2
\fBParameters\fP
.RS 4
\fInode\fP current node in the AST
.RE
.PP

.IP "\(bu" 2
\fBParameters\fP
.RS 4
\fIdata\fP minishell data structure
.RE
.PP

.IP "\(bu" 2
\fBReturns\fP
.RS 4
int status:
.RE
.PP

.IP "\(bu" 2
- 0: success
.IP "\(bu" 2
- 1: error 
.PP

.PP
Definition at line \fB21\fP of file \fBredirect_out\&.c\fP\&.
.nf
22 {
23         int fd[2];
24     pid_t   pid_1;
25     pid_t   pid_2;
26     int status;
27 
28     if (pipe(fd) == \-1)
29         ft_perror("pipe");
30     pid_1 = execute_redirect(node\->left, data, fd, 0);
31     pid_2 = execute_redirect(node\->right, data, fd, 1);
32     close_fds(fd);
33     waitpid(pid_1, &status, 0);
34         waitpid(pid_2, &status, 0);
35     return (WEXITSTATUS(status));
36 }
.PP
.fi

.PP
References \fBclose_fds()\fP, \fBexecute_redirect()\fP, \fBft_perror()\fP, \fBs_ast::left\fP, and \fBs_ast::right\fP\&.
.PP
Referenced by \fBexecute_ast()\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for maxishell from the source code\&.
