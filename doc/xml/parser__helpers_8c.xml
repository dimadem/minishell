<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="parser__helpers_8c" kind="file" language="C++">
    <compoundname>parser_helpers.c</compoundname>
    <includes refid="tokens_8h" local="yes">tokens.h</includes>
    <incdepgraph>
      <node id="18">
        <label>env.h</label>
        <link refid="env_8h"/>
      </node>
      <node id="17">
        <label>shell.h</label>
        <link refid="shell_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tokens.h</label>
        <link refid="tokens_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../lib/libft/inc/libft.h</label>
        <link refid="libft_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c</label>
        <link refid="parser__helpers_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="16">
        <label>pwd.h</label>
      </node>
      <node id="15">
        <label>readline/history.h</label>
      </node>
      <node id="14">
        <label>readline/readline.h</label>
      </node>
      <node id="10">
        <label>signal.h</label>
      </node>
      <node id="9">
        <label>stdarg.h</label>
      </node>
      <node id="11">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="parser__helpers_8c_1a57973a9791a885be52c3b8b13cdf327e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="tokens_8h_1a5fd329b243c6cd036f7b9ecbc86a9344" kindref="member">t_ast</ref> *</type>
        <definition>t_ast * new_ast_node</definition>
        <argsstring>(t_token_type type)</argsstring>
        <name>new_ast_node</name>
        <param>
          <type><ref refid="tokens_8h_1aaa12264c004e358b28290c09bb20969a" kindref="member">t_token_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" line="15" column="6" bodyfile="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" bodystart="15" bodyend="27"/>
        <references refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" compoundref="tokens_8h" startline="51">s_ast::args</references>
        <references refid="structs__ast_1ac3be51aa6a7ae13bd16b6ad0c7ac843c" compoundref="tokens_8h" startline="52">s_ast::left</references>
        <references refid="structs__ast_1ac2c9513b20e9351e45d9bc6361095f7b" compoundref="tokens_8h" startline="53">s_ast::right</references>
        <references refid="structs__ast_1ad1cd2bc8f77d3bbac46e3fdddff8b441" compoundref="tokens_8h" startline="50">s_ast::type</references>
        <referencedby refid="tokens_8h_1a66cf17aa7377cfb20adcaccdc1f38b1c" compoundref="parser__helpers_8c" startline="29" endline="40">create_redir</referencedby>
        <referencedby refid="tokens_8h_1a89cb417ed5bc7db489f0249b3d3e3ec6" compoundref="parser__helpers_8c" startline="74" endline="86">manage_commands</referencedby>
        <referencedby refid="tokens_8h_1a42a514028763c0c9c9f12226556407fe" compoundref="parser_8c" startline="85" endline="111">manage_pipe</referencedby>
        <referencedby refid="tokens_8h_1ac5e108e945caf03bd60f26514c270963" compoundref="parser_8c" startline="61" endline="83">manage_redirs</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser__helpers_8c_1a66cf17aa7377cfb20adcaccdc1f38b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="tokens_8h_1a5fd329b243c6cd036f7b9ecbc86a9344" kindref="member">t_ast</ref> *</type>
        <definition>t_ast * create_redir</definition>
        <argsstring>(t_token **tokens, t_token *tmp)</argsstring>
        <name>create_redir</name>
        <param>
          <type><ref refid="tokens_8h_1aead06bc7a81ebdd60cbdcf6b3b8e51d4" kindref="member">t_token</ref> **</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type><ref refid="tokens_8h_1aead06bc7a81ebdd60cbdcf6b3b8e51d4" kindref="member">t_token</ref> *</type>
          <declname>tmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" line="29" column="6" bodyfile="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" bodystart="29" bodyend="40"/>
        <references refid="tokens_8h_1a665af377c02015d59f668e4b2b2434bf" compoundref="parser_8c" startline="19" endline="39">create_redir_node</references>
        <references refid="structs__token_1afe30f6c413b34095d2a562e112a52e9a" compoundref="tokens_8h" startline="43">s_token::data</references>
        <references refid="structs__ast_1ac3be51aa6a7ae13bd16b6ad0c7ac843c" compoundref="tokens_8h" startline="52">s_ast::left</references>
        <references refid="tokens_8h_1ac5e108e945caf03bd60f26514c270963" compoundref="parser_8c" startline="61" endline="83">manage_redirs</references>
        <references refid="parser__helpers_8c_1a57973a9791a885be52c3b8b13cdf327e" compoundref="parser__helpers_8c" startline="15" endline="27">new_ast_node</references>
        <references refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" compoundref="tokens_8h" startline="44">s_token::next</references>
        <references refid="structs__ast_1ac2c9513b20e9351e45d9bc6361095f7b" compoundref="tokens_8h" startline="53">s_ast::right</references>
        <referencedby refid="tokens_8h_1ac5e108e945caf03bd60f26514c270963" compoundref="parser_8c" startline="61" endline="83">manage_redirs</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser__helpers_8c_1a4f595528e4e305887fda33e53258d602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arg_len</definition>
        <argsstring>(t_token *current)</argsstring>
        <name>arg_len</name>
        <param>
          <type><ref refid="tokens_8h_1aead06bc7a81ebdd60cbdcf6b3b8e51d4" kindref="member">t_token</ref> *</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" line="42" column="4" bodyfile="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" bodystart="42" bodyend="53"/>
        <references refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" compoundref="tokens_8h" startline="44">s_token::next</references>
        <references refid="tokens_8h_1a76a354e93d720f05344590ec8aa222dea46ac44ddfb231d3c8f76820d4624c099" compoundref="tokens_8h" startline="31">PHRASE</references>
        <references refid="structs__token_1a350680c70abb7e7173240477e92dc0a3" compoundref="tokens_8h" startline="42">s_token::type</references>
        <referencedby refid="tokens_8h_1a89cb417ed5bc7db489f0249b3d3e3ec6" compoundref="parser__helpers_8c" startline="74" endline="86">manage_commands</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser__helpers_8c_1ab5f23ff7ab59a241fa7476e6fca458cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_command_args</definition>
        <argsstring>(t_ast *command_node, t_token **tokens, int arg_count)</argsstring>
        <name>set_command_args</name>
        <param>
          <type><ref refid="tokens_8h_1a5fd329b243c6cd036f7b9ecbc86a9344" kindref="member">t_ast</ref> *</type>
          <declname>command_node</declname>
        </param>
        <param>
          <type><ref refid="tokens_8h_1aead06bc7a81ebdd60cbdcf6b3b8e51d4" kindref="member">t_token</ref> **</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" line="55" column="5" bodyfile="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" bodystart="55" bodyend="72"/>
        <references refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" compoundref="tokens_8h" startline="51">s_ast::args</references>
        <references refid="structs__token_1afe30f6c413b34095d2a562e112a52e9a" compoundref="tokens_8h" startline="43">s_token::data</references>
        <references refid="libft_8h_1aebe73f27c70c56ac5053f860ef5436c9" compoundref="ft__strdup_8c" startline="23" endline="36">ft_strdup</references>
        <references refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" compoundref="tokens_8h" startline="44">s_token::next</references>
        <referencedby refid="tokens_8h_1a89cb417ed5bc7db489f0249b3d3e3ec6" compoundref="parser__helpers_8c" startline="74" endline="86">manage_commands</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser__helpers_8c_1a89cb417ed5bc7db489f0249b3d3e3ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="tokens_8h_1a5fd329b243c6cd036f7b9ecbc86a9344" kindref="member">t_ast</ref> *</type>
        <definition>t_ast * manage_commands</definition>
        <argsstring>(t_token **tokens)</argsstring>
        <name>manage_commands</name>
        <param>
          <type><ref refid="tokens_8h_1aead06bc7a81ebdd60cbdcf6b3b8e51d4" kindref="member">t_token</ref> **</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" line="74" column="6" bodyfile="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c" bodystart="74" bodyend="86"/>
        <references refid="parser__helpers_8c_1a4f595528e4e305887fda33e53258d602" compoundref="parser__helpers_8c" startline="42" endline="53">arg_len</references>
        <references refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" compoundref="tokens_8h" startline="51">s_ast::args</references>
        <references refid="parser__helpers_8c_1a57973a9791a885be52c3b8b13cdf327e" compoundref="parser__helpers_8c" startline="15" endline="27">new_ast_node</references>
        <references refid="tokens_8h_1a76a354e93d720f05344590ec8aa222dea46ac44ddfb231d3c8f76820d4624c099" compoundref="tokens_8h" startline="31">PHRASE</references>
        <references refid="parser__helpers_8c_1ab5f23ff7ab59a241fa7476e6fca458cf" compoundref="parser__helpers_8c" startline="55" endline="72">set_command_args</references>
        <referencedby refid="tokens_8h_1ac5e108e945caf03bd60f26514c270963" compoundref="parser_8c" startline="61" endline="83">manage_redirs</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>**************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:::<sp/><sp/><sp/><sp/><sp/><sp/>::::::::<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>parser_helpers.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:+:<sp/><sp/><sp/><sp/><sp/><sp/>:+:<sp/><sp/><sp/><sp/>:+:<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+:+<sp/>+:+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+:+<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>By:<sp/>rocky<sp/>&lt;marvin@42.fr&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+#+<sp/><sp/>+:+<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+#+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+#+#+#+#+#+<sp/><sp/><sp/>+#+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>Created:<sp/>2024/06/14<sp/>10:45:48<sp/>by<sp/>rocky<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#+#<sp/><sp/><sp/><sp/>#+#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>Updated:<sp/>2024/06/17<sp/>11:06:25<sp/>by<sp/>rocky<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>###<sp/><sp/><sp/>########.fr<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tokens_8h" kindref="compound">tokens.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="tokens_8h_1a57973a9791a885be52c3b8b13cdf327e" refkind="member"><highlight class="normal"><ref refid="structs__ast" kindref="compound">t_ast</ref><sp/><sp/><sp/>*<ref refid="parser__helpers_8c_1a57973a9791a885be52c3b8b13cdf327e" kindref="member">new_ast_node</ref>(<ref refid="tokens_8h_1aaa12264c004e358b28290c09bb20969a" kindref="member">t_token_type</ref><sp/>type)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__ast" kindref="compound">t_ast</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*node;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structs__ast" kindref="compound">t_ast</ref>));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structs__ast_1ad1cd2bc8f77d3bbac46e3fdddff8b441" kindref="member">type</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" kindref="member">args</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structs__ast_1ac3be51aa6a7ae13bd16b6ad0c7ac843c" kindref="member">left</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structs__ast_1ac2c9513b20e9351e45d9bc6361095f7b" kindref="member">right</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="tokens_8h_1a66cf17aa7377cfb20adcaccdc1f38b1c" refkind="member"><highlight class="normal"><ref refid="structs__ast" kindref="compound">t_ast</ref><sp/><sp/><sp/>*<ref refid="parser__helpers_8c_1a66cf17aa7377cfb20adcaccdc1f38b1c" kindref="member">create_redir</ref>(<ref refid="structs__token" kindref="compound">t_token</ref><sp/>**tokens,<sp/><ref refid="structs__token" kindref="compound">t_token</ref><sp/>*tmp)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__ast" kindref="compound">t_ast</ref><sp/><sp/><sp/>*redirect_node;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>redirect_node<sp/>=<sp/><ref refid="parser__helpers_8c_1a57973a9791a885be52c3b8b13cdf327e" kindref="member">new_ast_node</ref>((*tokens)-&gt;type);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>*tokens<sp/>=<sp/>(*tokens)-&gt;<ref refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" kindref="member">next</ref>-&gt;<ref refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>redirect_node-&gt;<ref refid="structs__ast_1ac3be51aa6a7ae13bd16b6ad0c7ac843c" kindref="member">left</ref><sp/>=<sp/><ref refid="tokens_8h_1ac5e108e945caf03bd60f26514c270963" kindref="member">manage_redirs</ref>(tokens);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>redirect_node-&gt;<ref refid="structs__ast_1ac2c9513b20e9351e45d9bc6361095f7b" kindref="member">right</ref><sp/>=<sp/><ref refid="tokens_8h_1a665af377c02015d59f668e4b2b2434bf" kindref="member">create_redir_node</ref>(tmp-&gt;<ref refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>free(tmp-&gt;<ref refid="structs__token_1afe30f6c413b34095d2a562e112a52e9a" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>free(tmp);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(redirect_node);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="tokens_8h_1a4f595528e4e305887fda33e53258d602" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parser__helpers_8c_1a4f595528e4e305887fda33e53258d602" kindref="member">arg_len</ref>(<ref refid="structs__token" kindref="compound">t_token</ref><sp/>*current)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_count;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>&amp;&amp;<sp/>current-&gt;<ref refid="structs__token_1a350680c70abb7e7173240477e92dc0a3" kindref="member">type</ref><sp/>==<sp/><ref refid="tokens_8h_1a76a354e93d720f05344590ec8aa222dea46ac44ddfb231d3c8f76820d4624c099" kindref="member">PHRASE</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_count++;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;<ref refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg_count);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="tokens_8h_1ab5f23ff7ab59a241fa7476e6fca458cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser__helpers_8c_1ab5f23ff7ab59a241fa7476e6fca458cf" kindref="member">set_command_args</ref>(<ref refid="structs__ast" kindref="compound">t_ast</ref><sp/>*command_node,<sp/><ref refid="structs__token" kindref="compound">t_token</ref><sp/>**tokens,<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_count)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__token" kindref="compound">t_token</ref><sp/>*tmp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>arg_count)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_node-&gt;<ref refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" kindref="member">args</ref>[i]<sp/>=<sp/><ref refid="libft_8h_1aebe73f27c70c56ac5053f860ef5436c9" kindref="member">ft_strdup</ref>((*tokens)-&gt;data);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>*tokens;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tokens<sp/>=<sp/>(*tokens)-&gt;<ref refid="structs__token_1a5dae434205818bfc83a61809d4a34a29" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(tmp-&gt;<ref refid="structs__token_1afe30f6c413b34095d2a562e112a52e9a" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(tmp);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>command_node-&gt;<ref refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" kindref="member">args</ref>[arg_count]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="tokens_8h_1a89cb417ed5bc7db489f0249b3d3e3ec6" refkind="member"><highlight class="normal"><ref refid="structs__ast" kindref="compound">t_ast</ref><sp/><sp/><sp/>*<ref refid="parser__helpers_8c_1a89cb417ed5bc7db489f0249b3d3e3ec6" kindref="member">manage_commands</ref>(<ref refid="structs__token" kindref="compound">t_token</ref><sp/>**tokens)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structs__ast" kindref="compound">t_ast</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*command_node;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg_count;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>command_node<sp/>=<sp/><ref refid="parser__helpers_8c_1a57973a9791a885be52c3b8b13cdf327e" kindref="member">new_ast_node</ref>(<ref refid="tokens_8h_1a76a354e93d720f05344590ec8aa222dea46ac44ddfb231d3c8f76820d4624c099" kindref="member">PHRASE</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>arg_count<sp/>=<sp/><ref refid="parser__helpers_8c_1a4f595528e4e305887fda33e53258d602" kindref="member">arg_len</ref>(*tokens);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>command_node-&gt;<ref refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" kindref="member">args</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>*<sp/>(arg_count<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!command_node-&gt;<ref refid="structs__ast_1ab62d177d86a1908cf5bbdb5cf6e978f8" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser__helpers_8c_1ab5f23ff7ab59a241fa7476e6fca458cf" kindref="member">set_command_args</ref>(command_node,<sp/>tokens,<sp/>arg_count);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(command_node);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/dimadem/Documents/GitHub/minishell/src/parser/parser_helpers.c"/>
  </compounddef>
</doxygen>
